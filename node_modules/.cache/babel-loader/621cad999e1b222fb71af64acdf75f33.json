{"ast":null,"code":"import _asyncToGenerator from \"/home/jenna/Springboard/react-jobly/my-app-name/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jenna/Springboard/react-jobly/my-app-name/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jenna/Springboard/react-jobly/my-app-name/src/companies/CompanyList.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { Container } from 'react-bootstrap';\n/** Show page with list of companies.\r\n *\r\n * On mount, loads companies from API.\r\n * Re-loads filtered companies on submit from search form.\r\n *\r\n * This is routed to at /companies\r\n *\r\n * Routes -> { CompanyCard, SearchForm }\r\n */\n\nfunction CompanyList() {\n  var _this = this;\n\n  console.debug(\"CompanyList\");\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      companies = _useState2[0],\n      setCompanies = _useState2[1];\n\n  useEffect(function getCompaniesOnMount() {\n    console.debug(\"CompanyList useEffect getCompaniesOnMount\");\n    search();\n  }, []);\n  /** Triggered by search form submit; reloads companies. */\n\n  function search(_x) {\n    return _search.apply(this, arguments);\n  }\n\n  function _search() {\n    _search = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n      var companies;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return JoblyApi.getCompanies(name);\n\n            case 2:\n              companies = _context.sent;\n              setCompanies(companies);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _search.apply(this, arguments);\n  }\n\n  if (!companies) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList col-md-8 offset-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    style: {\n      padding: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Find your dream company\"), /*#__PURE__*/React.createElement(SearchForm, {\n    searchFor: search,\n    style: {\n      padding: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), companies.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, companies.map(function (c) {\n    return /*#__PURE__*/React.createElement(CompanyCard, {\n      key: c.handle,\n      handle: c.handle,\n      name: c.name,\n      description: c.description,\n      logoUrl: c.logoUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    });\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Sorry, no results were found!\")));\n}\n\nexport default CompanyList;","map":{"version":3,"names":["React","useState","useEffect","SearchForm","JoblyApi","CompanyCard","LoadingSpinner","Container","CompanyList","console","debug","companies","setCompanies","getCompaniesOnMount","search","name","getCompanies","padding","length","map","c","handle","description","logoUrl"],"sources":["/home/jenna/Springboard/react-jobly/my-app-name/src/companies/CompanyList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SearchForm from \"../common/SearchForm\";\r\nimport JoblyApi from \"../api\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport LoadingSpinner from \"../common/LoadingSpinner\";\r\nimport { Container } from 'react-bootstrap';\r\n\r\n/** Show page with list of companies.\r\n *\r\n * On mount, loads companies from API.\r\n * Re-loads filtered companies on submit from search form.\r\n *\r\n * This is routed to at /companies\r\n *\r\n * Routes -> { CompanyCard, SearchForm }\r\n */\r\n\r\nfunction CompanyList() {\r\n  console.debug(\"CompanyList\");\r\n\r\n  const [companies, setCompanies] = useState(null);\r\n\r\n  useEffect(function getCompaniesOnMount() {\r\n    console.debug(\"CompanyList useEffect getCompaniesOnMount\");\r\n    search();\r\n  }, []);\r\n\r\n  /** Triggered by search form submit; reloads companies. */\r\n  async function search(name) {\r\n    let companies = await JoblyApi.getCompanies(name);\r\n    setCompanies(companies);\r\n  }\r\n\r\n  if (!companies) return <LoadingSpinner />;\r\n\r\n  return (\r\n      <div className=\"CompanyList col-md-8 offset-md-2\">\r\n        <Container>\r\n        <h2  className=\"text-center\" style={{ padding: \"2rem\"}}>Find your dream company</h2>\r\n        <SearchForm searchFor={search} style={{ padding: \"2rem\"}}/>\r\n        {companies.length\r\n            ? (\r\n                <div className=\"CompanyList-list\">\r\n                  {companies.map(c => (\r\n                      <CompanyCard\r\n                          key={c.handle}\r\n                          handle={c.handle}\r\n                          name={c.name}\r\n                          description={c.description}\r\n                          logoUrl={c.logoUrl}\r\n                      />\r\n                  ))}\r\n                </div>\r\n            ) : (\r\n                <p className=\"lead\">Sorry, no results were found!</p>\r\n            )}\r\n            </Container>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CompanyList;\r\n"],"mappings":";;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAuB;EAAA;;EACrBC,OAAO,CAACC,KAAR,CAAc,aAAd;;EADqB,gBAGaT,QAAQ,CAAC,IAAD,CAHrB;EAAA;EAAA,IAGdU,SAHc;EAAA,IAGHC,YAHG;;EAKrBV,SAAS,CAAC,SAASW,mBAAT,GAA+B;IACvCJ,OAAO,CAACC,KAAR,CAAc,2CAAd;IACAI,MAAM;EACP,CAHQ,EAGN,EAHM,CAAT;EAKA;;EAVqB,SAWNA,MAXM;IAAA;EAAA;;EAAA;IAAA,qEAWrB,iBAAsBC,IAAtB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACwBX,QAAQ,CAACY,YAAT,CAAsBD,IAAtB,CADxB;;YAAA;cACMJ,SADN;cAEEC,YAAY,CAACD,SAAD,CAAZ;;YAFF;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAXqB;IAAA;EAAA;;EAgBrB,IAAI,CAACA,SAAL,EAAgB,oBAAO,oBAAC,cAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;EAEhB,oBACI;IAAK,SAAS,EAAC,kCAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACA;IAAK,SAAS,EAAC,aAAf;IAA6B,KAAK,EAAE;MAAEM,OAAO,EAAE;IAAX,CAApC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6BADA,eAEA,oBAAC,UAAD;IAAY,SAAS,EAAEH,MAAvB;IAA+B,KAAK,EAAE;MAAEG,OAAO,EAAE;IAAX,CAAtC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFA,EAGCN,SAAS,CAACO,MAAV,gBAEO;IAAK,SAAS,EAAC,kBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGP,SAAS,CAACQ,GAAV,CAAc,UAAAC,CAAC;IAAA,oBACZ,oBAAC,WAAD;MACI,GAAG,EAAEA,CAAC,CAACC,MADX;MAEI,MAAM,EAAED,CAAC,CAACC,MAFd;MAGI,IAAI,EAAED,CAAC,CAACL,IAHZ;MAII,WAAW,EAAEK,CAAC,CAACE,WAJnB;MAKI,OAAO,EAAEF,CAAC,CAACG,OALf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADY;EAAA,CAAf,CADH,CAFP,gBAcO;IAAG,SAAS,EAAC,MAAb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mCAjBR,CADF,CADJ;AAwBD;;AAED,eAAef,WAAf"},"metadata":{},"sourceType":"module"}